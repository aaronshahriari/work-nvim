-- -- CREATE BASE COMMANDS FOR SF CLI
--
-- function File_exists(filename)
--   local file = os.rename(filename, filename)
--   return file ~= nil
-- end
--
-- vim.api.nvim_create_augroup("SFCLIAugroup", { clear = true })
--
-- vim.api.nvim_create_autocmd("FileType", {
--   group = "SFCLIAugroup",
--   pattern = "apex,cls,soql",
--   callback = function()
--     -- SWITCH ORG
--     vim.api.nvim_create_user_command('SwitchOrg', function()
--       if File_exists("sfdx-project.json") then
--         local orgs = { "bgSand", "bgMain" }
--         vim.ui.select(orgs, { prompt = 'Select Org:', }, function(selected)
--           if selected then
--             local local_org = '{ "target-org": "' .. selected .. '" }'
--             local file = io.open(".sf/config.json", "w") -- Open the file in write mode
--             if file then
--               file:write(local_org)
--               file:close()
--             else
--               print("Error opening file!")
--             end
--           end
--         end)
--       else
--         print("Not In SF Directory")
--       end
--     end, {})
--
--     vim.api.nvim_create_user_command('TestingDeploy', function()
--       print("Aaron this works")
--     end, {})
--
--     -- SET TERMINALS
--     local job_id = 0
--     vim.keymap.set("n", "<leader>st", function()
--       vim.cmd.new()
--       vim.cmd.term()
--       vim.cmd.wincmd("J")
--       vim.api.nvim_win_set_height(0, 12)
--
--       job_id = vim.bo.channel
--     end)
--
--     vim.keymap.set("n", "<leader>t", function()
--       vim.cmd.new()
--       vim.cmd.term()
--       vim.cmd.wincmd("L")
--
--       job_id = vim.bo.channel
--     end)
--
--     -- RUN APEX
--     vim.keymap.set("n", "<leader>aa", function()
--       local file_name = vim.fn.expand("%")
--       local clear = "clear \r\n"
--       vim.fn.chansend(job_id, { clear })
--       local apex_cmd = "sf apex run -f '" .. file_name .. "'\r\n"
--       vim.fn.chansend(job_id, { apex_cmd })
--     end)
--
--     -- RUN QUERY FILE
--     vim.keymap.set("n", "<leader>q", function()
--       local file_name = vim.fn.expand("%")
--       local clear = "clear \r\n"
--       vim.fn.chansend(job_id, { clear })
--       local query_cmd = "sf data query -f '" .. file_name .. "'\r\n"
--       vim.fn.chansend(job_id, { query_cmd })
--     end)
--
--     -- RUN SELECTED QUERY
--     vim.keymap.set("v", "<leader>q", function()
--       local old_reg = vim.fn.getreg('"')
--       local old_regtype = vim.fn.getregtype('"')
--       vim.cmd('noautocmd normal! "vy"')
--       local selection = vim.fn.getreg("v"):gsub("\n", " ")
--       vim.fn.setreg('"', old_reg, old_regtype)
--       local clear = "clear \r\n"
--       -- vim.fn.chansend(job_id, { clear })
--       local query_cmd = "sf data query -q \"" .. selection .. "\"\r\n"
--       -- vim.fn.chansend(job_id, { query_cmd })
--     end)
--   end
-- })
